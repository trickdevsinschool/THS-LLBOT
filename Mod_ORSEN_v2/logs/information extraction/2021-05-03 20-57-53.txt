The big brown bear.
Entering EizenExtractor.parse_user_input()
  >> Sentence after coreference resolution via coref_resolve():
        The big brown bear.
  >> Annotating resolved sentence. Start processing by splitting into different sentences.
  >> Sentence to parse:
        The big brown bear.
Inferred sentence type: DESCRIPTION_EVENT
  >> Noun chunks extracted: [The big brown bear]
  >> Entities extracted: []
  >> Target token: 'THE'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (ROOT, det[ReceivesAction], dobj), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
  >> Target token: 'BIG'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
  >> Target token: 'BROWN'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
  >> Target token: 'BEAR'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (amod, [HasProperty], nsubj), (nsubj, ROOT[HasProperty], acomp), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
  >> Target token: '.'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
The big brown bear ate an apple.
Entering EizenExtractor.parse_user_input()
  >> Sentence after coreference resolution via coref_resolve():
        The big brown bear ate an apple.
  >> Annotating resolved sentence. Start processing by splitting into different sentences.
  >> Sentence to parse:
        The big brown bear ate an apple.
Inferred sentence type: ACTION_EVENT
  >> Noun chunks extracted: [The big brown bear, an apple]
  >> Entities extracted: []
  >> Inferred sentence voice: ACTIVE
  >> Inferred sentence actions: [ate]
  >> Starting extraction centered on action 'ATE'
  >> ACTORS:[bear]
  >> OBJECTS:[apple]
  >> ADVERBS:[]
  >> PREPOSITIONS:
  >> OBJECT OF PREPOSITIONS:
  >> New set after converting actor tokens to actor noun chunks: [The big brown bear]
  >> Storing current set for future use: [The big brown bear]
  >> Currently formed event:
        [[The big brown bear], ate, [apple], [], '', '']
  >> All unspliced events:
        [[[The big brown bear], ate, [apple], [], '', '']]
  >> Extracted events from user input:
        [The big brown bear, ate, apple, None, '', '']
  >> Noun chunks extracted: [The big brown bear, an apple]
  >> Entities extracted: []
  >> Target token: 'THE'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (ROOT, det[ReceivesAction], dobj), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
  >> Target token: 'BIG'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
  >> Target token: 'BROWN'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
  >> Target token: 'BEAR'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
        bear -> HasProperty() -> big 	(type 1, negated: False, flipped: False)
  >> Adding new concept from -1(???): bear --(HasProperty)--> big
  >> Target token: 'ATE'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (amod, [HasProperty], nsubj), (nsubj, ROOT[HasProperty], acomp), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
        bear -> CapableOf() -> ate 	(type 1, negated: False, flipped: False)
  >> Adding new concept from -1(???): bear --(CapableOf)--> eat
        apple -> ReceivesAction() -> ate 	(type 1, negated: False, flipped: False)
  >> Increasing the score of ReceivesAction --(eat)--> -1 from 0.0 to 2.0
  >> Target token: 'AN'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (ROOT, det[ReceivesAction], dobj), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
  >> Target token: 'APPLE'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
  >> Target token: '.'
  >> Extracted the following templates:
  >> (nsubj, [CapableOf], ROOT), (amod, [HasProperty], nsubj), (ROOT, [ReceivesAction], dobj), (amod, [HasProperty], dobj), (amod, [HasProperty], pobj), (amod, [HasProperty], attr)
  >> Extracted relations:
